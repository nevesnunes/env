[buildPlans.iosevka-custom]      # <iosevka-custom> is your plan name
family = "Iosevka Custom"        # Font menu family name
spacing = "term"               # Optional; Values: `normal`, `term`, `fontconfig-mono`, or `fixed`
serifs = "sans"                  # Optional; Values: `sans` or `slab`
no-ligation = true

###################################################################################################
# Configure variants

# Optional; Whether to inherit a `ss##` variant
[buildPlans.iosevka-custom.variants]
inherits = "ss06"  # Liberation Mono Style

# Optional; Configure single character's variant
[buildPlans.iosevka-custom.variants.design]
g = 'singlestorey'

# Optional; Configure single character's variant for Upright and Oblique; Overrides [design]
[buildPlans.iosevka-custom.variants.upright]
i = 'zshaped'
l = 'zshaped'

# Optional; Configure single character's variant for Italic only; Overrides [design]
[buildPlans.iosevka-custom.variants.italic]
i = 'serifed-tailed'
l = 'serifed-tailed'

# End variant section
###################################################################################################

###################################################################################################
# Configure ligations

[buildPlans.iosevka-custom.ligations]
inherits = "default-calt"   # Optional; inherits an existing ligation set
disables = []               # Optional; disable specific ligation groups, overrides inherited ligation set
enables  = []               # Optional; enable specific ligation groups, overrides inherited ligation set

# End ligation section
###################################################################################################


###################################################################################################
# Override default building weights
# When buildPlans.<plan name>.weights is absent, all weights would built and mapped to
# default values.
# IMPORTANT : Currently "menu" and "css" property only support numbers between 0 and 1000.
#             and "shape" properly only supports number between 100 and 900 (inclusive).
#             If you decide to use custom weights you have to define all the weights you
#             plan to use otherwise they will not be built.
[buildPlans.iosevka-custom.weights.regular]
shape = 700  # Weight for glyph shapes.
menu  = 700  # Weight for the font's names.
css   = 700  # Weight for webfont CSS.

[buildPlans.iosevka-custom.weights.bold]
shape = 900
menu  = 900
css   = 900

# End weight section
###################################################################################################

###################################################################################################
# Override default building slope sets
# Format: <upright|italic|oblique> = <"normal"|"italic"|"oblique">
# When this section is absent, all slopes would be built.

[buildPlans.iosevka-custom.slopes]
upright = "normal"
italic = "italic"
# oblique = "oblique"

# End slope section
###################################################################################################

###################################################################################################
# Override default building widths
# When buildPlans.<plan name>.widths is absent, all widths would built and mapped to
# default values.
# IMPORTANT : Currently "shape" property only supports numbers between 434 and 664 (inclusive),
#             while "menu" only supports integers between 1 and 9 (inclusive).
#             The "shape" parameter specifies the unit width, measured in 1/1000 em. The glyphs'
#             width are equal to, or a simple multiple of the unit width.
#             If you decide to use custom widths you have to define all the widths you plan to use,
#             otherwise they will not be built.

[buildPlans.iosevka-custom.widths.normal]
shape = 500        # Unit Width, measured in 1/1000 em.
menu  = 5          # Width grade for the font's names.
css   = "normal"   # "font-stretch' property of webfont CSS.

# [buildPlans.iosevka-custom.widths.extended]
# shape = 576
# menu  = 7
# css   = "expanded"

# End width section
###################################################################################################

###################################################################################################
# Character Exclusion
# Specify character ranges in the section below to exclude certain characters from the font being
# built. Remove this section when this feature is not needed.

# [buildPlans.iosevka-custom.exclude-chars]
# ranges = [[10003, 10008]]

# End character exclusion
###################################################################################################

###################################################################################################
# Compatibility Ligatures
# Certain applications like Emacs does not support proper programming liagtures provided by
# OpenType, but can support ligatures provided by PUA codepoints. Therefore you can edit the
# following section to build PUA characters that are generated from the OpenType ligatures.
# Remove this section when compatibility ligatures are not needed.

[[buildPlans.iosevka-custom.compatibility-ligatures]]
unicode = 57600 # 0xE100
featureTag = 'calt'
sequence = '<*>'

# End compatibility ligatures section
###################################################################################################

###################################################################################################
# Metric overrides
# Certain metrics like line height (leading) could be overridden in your build plan file.
# Edit the values to change the metrics. Remove this section when overriding is not needed.

[buildPlans.iosevka-custom.metric-override]
leading = 1000
winMetricAscenderPad = 0
winMetricDescenderPad = 0
powerlineScaleY = 1
powerlineScaleX = 1
powerlineShiftY = 0
powerlineShiftX = 0

# End metric override section
###################################################################################################
