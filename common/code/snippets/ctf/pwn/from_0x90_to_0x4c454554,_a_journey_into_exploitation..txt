Originally from : http://myne-us.blogspot.com/2010/08/from-0x90-to-0x4c454554-journey-into.html

#############################################################################################################
#
#                               From 0x90 to 0x4c454554, a journey into exploitation.
#
#############################################################################################################

I put some time in and compiled a list in a course type layout to help people in process of learning exploit development. I hope my research will help others spend more time learning and less time searching.

First off I want to thank the corelan guys for the help they have provided me so far in the process.

layout: I will be posting in a hierarchical structure, each hierarchy structure should be fully understood before moving on to the next section. I will also post sets of Parallel learning topics that you can use to study in line with other topics to help prevent monotony. These Parallel areas will have a start and end mark which shows when they should be complete in perspective to the overall learning

desktop background Link to Backgrounds: http://redmine.corelan.be:8800/projects/corelanart/files

Other Posts like this one:
Because of quality of these posts I wanted to put them at the top. I could not figure out where to put them in the list because they cover so much.

past-present-future of windows exploitation: http://www.abysssec.com/blog/2010/05/past-present-future-of-windows-exploitation/

smashing the stack in 2010: http://5d4a.wordpress.com/2010/08/02/smashing-the-stack-in-2010/

IT-Sec-catalog: https://code.google.com/p/it-sec-catalog/

#############################################################################################################
#                              
#                                             Part 1: Programming
#
#############################################################################################################


    Parallel learning #1:(complete this section before getting to the book "Hacking Art of exploitation")
    While going through the programming area I concentrate on core topics to help us later on with exploit writing. One area that is very good to pick up is some kind of scripting language. Listed below are some of the most popular scripting languages and ones I feel will prove to be the most useful.

    Python: One of my favorite languages and growing in popularity python is a powerful language that is easy to use and well documented.

    Learn Python the hard way: http://learnpythonthehardway.org/book/

    Wikibooks Python: http://en.wikibooks.org/wiki/Subject:Python_programming_language

    http://docs.python.org/

    onlinecomputerbooks.com: http://www.onlinecomputerbooks.com/free-python-books.php

    Grey hat python: http://oreilly.com/catalog/9781593271923

################################

    Ruby: If you plan on later on working inside of metasploit this may be the language you want to start with. I highly suggest this for exploit developers to learn.

    Wikibooks Ruby: http://en.wikibooks.org/wiki/Subject:Ruby_programming_language

    LittleBookOfRuby: http://www.sapphiresteel.com/IMG/pdf/LittleBookOfRuby.pdf

    Ruby Programmers Guide: http://www.ruby-doc.org/docs/ProgrammingRuby/

    onlinecomputerbooks.com: http://www.onlinecomputerbooks.com/free-ruby-books.php

################################

    Perl: An older language that still has a lot of use perl is one of the highest used scripting languages and you will see it used in many exploits. (I would suggest python over perl)

    [book] O'Reilly Learning Perl: http://www.amazon.com/Learning-Perl-5th-Randal-Schwartz/dp/0596520107/ref=sr_1_1?ie=UTF8&s=books&qid=1280901933&sr=8-1

    onlinecomputerbooks.com: http://www.onlinecomputerbooks.com/free-perl-books.php

################################

    C and C++ programming:
    It is very important to understand what you are exploiting so to get started let us figure out what we are exploiting. You do not need to go through all of these but when finished with this section you should have a good understanding of C and C++ programming.

    Cprogramming.com

    http://www.java2s.com/Tutorial/C/CatalogC.htm

    http://beej.us/guide/bgc/

    onlinecomputerbooks.com: http://www.onlineprogrammingbooks.com/free-c-books.php

################################

    X86 Assembly:
    Ok now to understand what the computer reads when we compile C and C++. I am going to mostly stick to the IA-32(X86) assembly language. Read the first link to understand why. It explains it very well.

    Skullsecurity: Assembly: http://www.skullsecurity.org/wiki/index.php/Fundamentals

    Windows Assembly Programming Tutorial: http://www.acm.uiuc.edu/sigwin/old/workshops/winasmtut.pdf

    http://en.wikibooks.org/wiki/X86_Assembly

    [book]The Art of Assembly: http://homepage.mac.com/randyhyde/webster.cs.ucr.edu/index.html

    Assembly primer for hackers: http://www.securitytube.net/Assembly-Primer-for-Hackers-%28Part-1%29-System-Organization-video.aspx

    PC Assembly Language: http://www.drpaulcarter.com/pcasm/

################################

    Windows Programming:
    This is to help understand what we are programming in and the structure of libraries in the OS. This area is very important far down the line

    http://en.wikibooks.org/wiki/Windows_Programming

    http://www.relisoft.com/win32/index.htm

    [book]Windows Internals 5: http://www.amazon.com/s/ref=nb_sb_noss?url=search-alias%3Dstripbooks&field-keywords=windows+sysinternals&x=0&y=0

    [book]Windows Internals 4: http://www.amazon.com/Microsoft-Windows-Internals-4th-Server/dp/0735619174

################################

    Disassembly:
    Dissassembly is not as much programming as it is what the computer understands and the way it is interpreted from CPU and memory. This is where we start getting into the good stuff.

    http://en.wikibooks.org/wiki/X86_disassembly

    The Art of Disassembly: http://tuts4you.com/download.php?view.187


#############################################################################################################
#                              
#                                             Part 2: Getting started
#
#############################################################################################################


    Now that we have a very good understanding of programming languages and what the machine is doing we can start working on task at hand, exploitation.
    Here I will start a lot of the learning in very much a list format and adding in comments or Parallel learning areas when needed.

################################

    Smash the stack for fun and profit (Phrack 49): http://www.phrack.org/issues.html?issue=49&id=14#article

    C function call conventions and the stack: http://cs.umbc.edu/~chang/cs313.s02/stack.shtml

    Anatomy of a program in memory: http://duartes.org/gustavo/blog/post/anatomy-of-a-program-in-memory

    Function Calls, Part 1 (the Basics): http://www.codeguru.com/cpp/misc/misc/assemblylanguage/article.php/c14641

    IA-32 Architecture: http://www.sandpile.org/ia32/index.htm

    [videos]Code Audit from cryptocity.net: http://pentest.cryptocity.net/code-audits/

################################

    (Parallel learning #1 finished: You should now have finished on Parallel learning 1 and have a good understanding of one of the 3 languages)

    [Book]Hacking art of exploitation [Chapter 1&2]: http://www.amazon.com/Hacking-Art-Exploitation-Jon-Erickson/dp/1593271441/ref=sr_1_fkmr1_1?ie=UTF8&qid=1280905635&sr=1-1-fkmr1

    Corelan T1: http://www.corelan.be:8800/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/

    Corelan T2: http://www.corelan.be:8800/index.php/2009/07/23/writing-buffer-overflow-exploits-a-quick-and-basic-tutorial-part-2/

################################

    Parallel learning #2:(complete this section before end of part 2)

    (Read the first few posts on this blog has some good info)
    Kspice blog: http://blog.ksplice.com/2010/03/

    (Read some of the post from this blog they are very helpful with starting out with fuzzers.)
    Nullthreat's blog: http://www.nullthreat.net/

    (I am linked directly to a demo exploit for this area but this is a useful blog to keep track of for many things)
    A demo exploit: http://www.darklevel.org/index.php?option=com_content&task=view&id=54&Itemid=89


    tenouk.com: Buffer overflow intro: http://www.tenouk.com/Bufferoverflowc/stackbasedbufferoverflow.html

    The Tao of Windows Buffer Overflow: http://www.cultdeadcow.com/cDc_files/cDc-351/index.html

    nsfsecurity on BOF: http://nsfsecurity.pr.erau.edu/bom/index.html

    Hacker center: BOF: http://www.hackerscenter.com/index.php?/Downloads/Library/Application-Security/View-category.html

    [video]Buffer overflow Primer: http://www.securitytube.net/Buffer-Overflow-Primer-Part-1-%28Smashing-the-Stack%29-video.aspx

    [Book]Shellcoder's Handbook Ch1&2: http://www.amazon.com/Shellcoders-Handbook-Discovering-Exploiting-Security/dp/047008023X/ref=sr_1_1?ie=UTF8&s=books&qid=1282450549&sr=8-1

    [Book]Hacking art of exploitation [Chapter 3]: http://www.amazon.com/Hacking-Art-Exploitation-Jon-Erickson/dp/1593271441/ref=sr_1_fkmr1_1?ie=UTF8&qid=1280905635&sr=1-1-fkmr1


    Corelan T3A: http://www.corelan.be:8800/index.php/2009/07/25/writing-buffer-overflow-exploits-a-quick-and-basic-tutorial-part-3-seh/

    Corelan T3B: http://www.corelan.be:8800/index.php/2009/07/28/seh-based-exploit-writing-tutorial-continued-just-another-example-part-3b/

    SEH Based Exploits and the development process: http://www.ethicalhacker.net/content/view/309/2/

    SEH overwrite simplified: http://www.shell-storm.org/papers/files/405.pdf

    ((Parallel learning #2 finished:)

#############################################################################################################
#                              
#                                              Part 3:Tools of the trade
#
#############################################################################################################

    This is a list of tools I have started using and find very useful.

    Immunity Debugger: http://www.immunityinc.com/products-immdbg.shtml

    Ollydbg: http://www.ollydbg.de/

    Windbg: http://www.microsoft.com/whdc/devtools/debugging/installx86.mspx

    IDA Pro: http://www.hex-rays.com/idapro/

    explorer suite: http://myne-us.blogspot.com/2010/08/from-0x90-to-0x4c454554-journey-into.html

    Sysinternals: http://technet.microsoft.com/en-us/sysinternals/bb795533.aspx

################################

    And here are some corelan posts on how to use them. I will supply more in future but this is a very good start.

    Corelan T5: http://www.corelan.be:8800/index.php/2009/09/05/exploit-writing-tutorial-part-5-how-debugger-modules-plugins-can-speed-up-basic-exploit-development/

    Corelan: Immunity debugger cheatsheet: http://www.corelan.be:8800/index.php/2010/01/26/starting-to-write-immunity-debugger-pycommands-my-cheatsheet/

#############################################################################################################
#                              
#                                              Part 4: Network and Metasploit
#
#############################################################################################################


    (Networking)

    Beej.us network programming: http://beej.us/guide/bgnet/output/html/multipage/index.html

    [Book]Hacking art of exploitation [Chapter 4]: http://www.amazon.com/Hacking-Art-Exploitation-Jon-Erickson/dp/1593271441/ref=sr_1_fkmr1_1?ie=UTF8&qid=1280905635&sr=1-1-fkmr1

    Socket Programming in ruby: https://www6.software.ibm.com/developerworks/education/l-rubysocks/l-rubysocks-a4.pdf

################################

    (Metasploit)

    [Video]Security Tube: Metasploit Megaprimer: http://www.securitytube.net/Metasploit-Megaprimer-%28Exploitation-Basics-and-need-for-Metasploit%29-Part-1-video.aspx

    Metasploit.com: http://www.metasploit.com/

    Metasploit Unleashed: http://www.offensive-security.com/metasploit-unleashed/

    [video]Metasploit Louisville Class: http://www.irongeek.com/i.php?page=videos/metasploit-class

    Metasploitable (a target): http://blog.metasploit.com/2010/05/introducing-metasploitable.html

    Corelan T4: http://www.corelan.be:8800/index.php/2009/08/12/exploit-writing-tutorials-part-4-from-exploit-to-metasploit-the-basics/

    intern0t: developing my first exploit: http://guides.intern0t.net/msf2.php

    [video]DHAtEnclaveForensics: Exploit Creation in Metasploit: http://www.youtube.com/user/DHAtEnclaveForensics#p/u/9/rGlvgeeU0vQ

    Wikibooks Metasploit/Writing Windows Exploit: http://en.wikibooks.org/wiki/Metasploit/WritingWindowsExploit

#############################################################################################################
#                              
#                                              Part 5: Shellcode
#
#############################################################################################################


    Corelan T9: http://www.corelan.be:8800/index.php/2010/02/25/exploit-writing-tutorial-part-9-introduction-to-win32-shellcoding/

    projectShellcode: Shellcode Tutorial: http://projectshellcode.com/?q=node/12

    [Book]Shellcoder's Handbook Ch3: http://www.amazon.com/Shellcoders-Handbook-Discovering-Exploiting-Security/dp/047008023X/ref=sr_1_1?ie=UTF8&s=books&qid=1282450549&sr=8-1

    [Book]Hacking art of exploitation [Chapter 5]: http://www.amazon.com/Hacking-Art-Exploitation-Jon-Erickson/dp/1593271441/ref=sr_1_fkmr1_1?ie=UTF8&qid=1280905635&sr=1-1-fkmr1

    Writing small shellcode: http://www.shell-storm.org/papers/files/440.pdf

    Shell-storm Shellcode database: http://www.shell-storm.org/shellcode/

    Advanced shellcode: http://www.vividmachines.com/shellcode/shellcode.html#as

#############################################################################################################
#                              
#                                       Part 6: Engineering in Reverse
#
#############################################################################################################


    Parallel Learning #3:(constant place to reference and use for reversing)

    Understanding Code: http://www.reteam.org/papers/e57.pdf

    Reverse Engineering the World: http://mattoh.wordpress.com/

    Reversing for Newbies: http://tuts4you.com/download.php?list.17

    Room362.com reversing blog post: http://www.room362.com/blog/2009/6/12/getting-your-fill-of-reverse-engineering-and-malware-analysi.html

    Ethicalhacker.net intro to reverse engineering: http://www.ethicalhacker.net/content/view/152/2/

    acm.uiuc.edu Intro to Reverse Engineering software: http://www.acm.uiuc.edu/sigmil/RevEng/

    [Book]Reversing: secrets of reverse engineering: http://www.amazon.com/Reversing-Secrets-Engineering-Eldad-Eilam/dp/0764574817/ref=sr_1_1?s=books&ie=UTF8&qid=1280937813&sr=1-1

    [video]Reverse Engineering from cryptocity.net: http://pentest.cryptocity.net/reverse-engineering/

    CrackZ's Reverse Engineering Page: http://www.woodmann.com/crackz/

    Reverse engineering techniques: http://www.securitytube.net/Reverse-Engineering-Techniques-to-find-Security-Vulnerabilities-video.aspx

    CBM_1_2_2006_Goppit_PE_Format_Reverse_Engineer_View: http://dl.dropbox.com/u/5489930/CBM_1_2_2006_Goppit_PE_Format_Reverse_Engineer_View.pdf

    HistoryofPackingTechnology: http://securitylabs.websense.com/content/Assets/HistoryofPackingTechnology.pdf

    Windows PE Header: http://marcoramilli.blogspot.com/2010/12/windows-pe-header.html

    OpenRCE Articles: http://www.openrce.org/articles/


    [GAME]Crackmes.de: http://crackmes.de/

#############################################################################################################
#                              
#                                    Part 7: Getting a little deeper into BOF
#
#############################################################################################################


    Parallel Learning #4:(To the end of the course and beyond)
    Find old exploits on Exploit-db (http://www.exploit-db.com/) download them, test them, rewrite them, understand them.

################################

    (Part A: preventions)

    Buffer overflow protection: http://en.wikipedia.org/wiki/Buffer_overflow_protection

    The evolution of Microsoft's Mitigations: http://technet.microsoft.com/en-us/security/dd285253.aspx

    Purdue.edu: Canary Bit: http://www.cs.purdue.edu/homes/mkirkpat/papers/canbit.pdf

    Preventing the exploitation of SEH Overwrites with SEHOP: http://blogs.technet.com/b/srd/archive/2009/02/02/preventing-the-exploitation-of-seh-overwrites-with-sehop.aspx

    Bypassing SEHOP: http://www.sysdream.com/articles/sehop_en.pdf

    Wikipedia Executable space protextion: http://en.wikipedia.org/wiki/Executable_space_protection

    Wikipedia DEP: http://en.wikipedia.org/wiki/Data_Execution_Prevention

    Bypassing Hardware based DEP: http://www.securestate.com/Docs/Bypassing_Hardware_based_Data_Execution_Prevention.pdf

    Wikipedia ASLR: http://en.wikipedia.org/wiki/ASLR

    Symantec ASLR in Vista: http://www.symantec.com/avcenter/reference/Address_Space_Layout_Randomization.pdf

    Defeating the Stack Based Buffer Overflow Prevention: http://www.ngssoftware.com/papers/defeating-w2k3-stack-protection.pdf

    Corelan T6: http://www.corelan.be:8800/index.php/2009/09/21/exploit-writing-tutorial-part-6-bypassing-stack-cookies-safeseh-hw-dep-and-aslr/

    Return to libc: https://secure.wikimedia.org/wikipedia/en/wiki/Return-to-libc_attack

    [video] microsoft protections video: http://technet.microsoft.com/en-us/security/dd285253.aspx

################################

    (Part B: Advanced BOF)

    [video]Exploitation from cryptocity.net: http://pentest.cryptocity.net/exploitation/

    Corelan T7: http://www.corelan.be:8800/index.php/2009/11/06/exploit-writing-tutorial-part-7-unicode-from-0x00410041-to-calc/

    Corelan T8: http://www.corelan.be:8800/index.php/2010/01/09/exploit-writing-tutorial-part-8-win32-egg-hunting/

    Corelan T10: http://www.corelan.be:8800/index.php/2010/06/16/exploit-writing-tutorial-part-10-chaining-dep-with-rop-the-rubikstm-cube/

    Virtual Worlds - Real Exploits: http://www.youtube.com/watch?v=UIKy1Shxd6Q&feature=related


    [GAME]Gera's Insecure Programming: http://community.corest.com/~gera/

    [GAME]Smash the stack wargaming network: http://www.smashthestack.org/

#############################################################################################################
#                              
#                                                 Part 8: Heap overflow
#
#############################################################################################################

    
    Heap Overflows for Humans-101: http://www.exploit-db.com/download_pdf/15982

    rm -rf / on heap overflow: http://pthreads.blogspot.com/2007/04/heap-overflow.html

    w00w00 on heap overflow: http://www.w00w00.org/files/articles/heaptut.txt

    [book]Shellcoder's Handbook Ch4&5: http://www.amazon.com/Shellcoders-Handbook-Discovering-Exploiting-Security/dp/047008023X/ref=sr_1_1?ie=UTF8&s=books&qid=1282450549&sr=8-1

    h-online A heap of Risk: http://www.h-online.com/security/features/A-Heap-of-Risk-747161.html

    [video]Defcon 15 remedial Heap Overflows: http://www.youtube.com/watch?v=2W4tuxHcOnE

    heap overflow: ancient art of unlink seduction: http://www.thehackerslibrary.com/?p=872

    Memory corruptions part II -- heap: http://advancedwindowsdebugging.com/ch06.pdf


    [book]Read the rest of Shellcoder's Handbook: http://www.amazon.com/Shellcoders-Handbook-Discovering-Exploiting-Security/dp/047008023X/ref=sr_1_1?ie=UTF8&s=books&qid=1282450549&sr=8-1

#############################################################################################################
#                              
#                                             Part 9: Exploit listing sites
#
#############################################################################################################
    

    Exploit-DB: http://www.exploit-db.com/

    Injector: http://inj3ct0r.com/

    CVE Details: http://www.cvedetails.com/

    Packetstorm: http://www.packetstormsecurity.org/assess/exploits/

    CERT: http://www.us-cert.gov/cas/techalerts/

    Mitre: http://cve.mitre.org/cve/index.html

    National Vulnerability Database: http://web.nvd.nist.gov/view/vuln/search?cid=3

################################

    (bonus: site that lists types of vulnerabilties and info)
    Common Weakness Enumberation: http://cwe.mitre.org/index.html



If anyone has any good links to add post a comment and I will try to add them or send me the link and I will review and add it.

If anyone finds any bad or false information in any of these tutorials please let me know. I do not want people reading this getting bad information.