# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout somewhen, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

#### Startup

default_orientation horizontal
focus_follows_mouse no

assign [class="(?i)skype"] 1
assign [class="Thunderbird"] 2
exec --no-startup-id i3-msg 'workspace 3'

exec --no-startup-id ~/bin/autoruns.sh
exec --no-startup-id ~/bin/run-daemons.sh
exec --no-startup-id setxkbmap altmagic

exec --no-startup-id user-browser
exec --no-startup-id user-terminal -e tmux

#### Keybinds

# TODO: Use custom actions with i3-msg "focus"

set $mod Mod4

bindsym $mod+Tab \
    workspace back_and_forth
bindsym $mod+Shift+Tab \
    move container to workspace back_and_forth; workspace back_and_forth
bindsym $mod+bracketleft \
    exec i3-input -F 'mark %s' -P 'Mark name: '
bindsym $mod+apostrophe \
    exec i3-input -F '[con_mark=%s] focus' -P 'Go to mark: '

bindsym $mod+Delete exec slock /opt/screen-off.sh
# "Screen Locker"

bindsym $mod+Return exec user-terminal -e tmux
# "Tmux"

bindsym Mod1+$mod+Return exec user-terminal
# "Terminal"

bindsym $mod+b exec user-browser
# "Browser"

bindsym $mod+f exec nautilus
# "Nautilus"

bindsym $mod+v exec gvim
# "Gvim"

bindsym Mod1+$mod+v exec gvim -c "cd ~/Documents/my/journal"
# "Journal"

bindsym Shift+$mod+w exec y-dl-save-link.sh
# "Save Video"

bindsym $mod+w exec scratchpad-terminal.sh zsh -ci "clip-saver.sh"
# "Save Clipboard"

bindsym Print exec valid-screenshot.sh
# "Screenshot to Pictures"

bindsym Mod1+Print exec valid-screenshot.sh -wB
# "Screenshot Window Contents"

bindsym $mod+comma exec switchlayout.sh
# "Switch Keyboard Layout"

bindsym $mod+BackSpace exec scratchpad-terminal.sh zsh -ci "uf"
bindsym $mod+Insert exec scratchpad-terminal.sh zsh -ci "uf"
# "uf"

bindsym $mod+period exec xdotool mousemove 9999 9999
# "ratpoison tribute"

#### Window Rules

# xprop:
#
# class    - 2nd part of WM_CLASS
# instance - 1st part of WM_CLASS
# title    - WM_NAME

for_window [class="Firefox"] layout tabbed
for_window [class="google-chrome"] layout tabbed
for_window [class="Inkscape"] layout tabbed
for_window [class="Thunderbird"] layout tabbed
for_window [class="VirtualBox"] layout tabbed

for_window [class="(?i)term" title="scratchpad"] floating enable
for_window [class="dosbox"] floating enable
for_window [class="(?i)wine"] floating enable
for_window [instance="file-roller"] floating enable
for_window [instance="grafx2"] floating enable
for_window [instance="(?i)skype"] floating enable
for_window [instance="mpv"] floating enable
for_window [instance="viewnior"] floating enable
for_window [instance="xsane"] floating enable
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable

for_window [class="processing"] floating enable
for_window [title="Processing"] floating disable

# GNOME 3
# for_window [window_role="^gnome"] border pixel 2, floating enable
# for_window [instance="^gnome"] border pixel 2, floating enable

# for_window [instance="^gnome-text"] border normal 2, floating disable
# for_window [instance="^gnome-terminal"] border normal 2, floating disable

# Krita docker windows don't need two titlebars
for_window [instance="krita"] border pixel 2
for_window [title="Krita$"] border normal 2

#### Defaults

# class                 border  backgr. text    indctr. child_border  
client.focused          #3b4040 #4a5050 #eeeeec #2e9ef4 #3b4040 
client.focused_inactive #6b7575 #788484 #cccccc #484e50 #6b7575 
client.unfocused        #6b7575 #788484 #cccccc #484e50 #6b7575 
client.urgent           #997373 #dba5a5 #1c1f1f #dba5a5 #997373 

hide_edge_borders both
new_window normal 2
new_float pixel 2

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below. ISO 10646 = Unicode
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, if you need a lot of unicode glyphs or
# right-to-left text rendering, you should instead use pango for rendering and
# chose a FreeType font, such as:
font pango:Sans Bold 11

# We first set the titlebar font size to a large size to get a good padding amount.
# We then use pango markup to force i3 to print with the desired font.
# This gives us large titlebars with a small font. :P
#font pango:Sans Bold 12
#for_window [class=".*"] title_format "<span font='Sans Bold 11'> > %title</span>"

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
# bindsym $mod+d exec dmenu_run -i -nb '#000' -sb '#508cca' -fn 'Sans-12'
bindsym $mod+x exec rofi -show run
bindsym $mod+space exec rofi -show window

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# move floating window
bindsym $mod+m mode "move" focus floating
mode "move" {
    bindsym i focus left
    bindsym u focus right

    bindsym h move left
    bindsym j move down
    bindsym k move up
    bindsym l move right

    # back to normal: Enter or Escape
    bindsym q mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# split in horizontal orientation
bindsym $mod+Shift+s split h

# split in vertical orientation
bindsym $mod+s split v

# enter fullscreen mode for the focused container
bindsym $mod+F11 fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+Mod1+y layout stacking
bindsym $mod+y layout toggle
bindsym $mod+Shift+y layout tabbed
bindsym $mod+o layout toggle split

# toggle tiling / floating
bindsym $mod+semicolon floating toggle

# change focus between tiling / floating windows
bindsym $mod+Shift+semicolon focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+Shift+a focus child

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

bindsym $mod+i workspace prev_on_output
bindsym $mod+u workspace next_on_output
bindsym $mod+Shift+i mark _current, \
    workspace prev_on_output, [con_mark=_current] move window to workspace current
bindsym $mod+Shift+u mark _current, \
    workspace next_on_output, [con_mark=_current] move window to workspace current
# bindsym $mod+Shift+i move container to workspace prev; workspace prev
# bindsym $mod+Shift+u move container to workspace next; workspace next

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1; workspace 1
bindsym $mod+Shift+2 move container to workspace 2; workspace 2
bindsym $mod+Shift+3 move container to workspace 3; workspace 3
bindsym $mod+Shift+4 move container to workspace 4; workspace 4
bindsym $mod+Shift+5 move container to workspace 5; workspace 5
bindsym $mod+Shift+6 move container to workspace 6; workspace 6
bindsym $mod+Shift+7 move container to workspace 7; workspace 7
bindsym $mod+Shift+8 move container to workspace 8; workspace 8
bindsym $mod+Shift+9 move container to workspace 9; workspace 9
bindsym $mod+Shift+0 move container to workspace 10; workspace 10

# Make the currently focused window a scratchpad
bindsym $mod+c move scratchpad

# Show the first scratchpad window
bindsym $mod+Shift+c scratchpad show

# reload the configuration file
bindsym $mod+Mod1+r reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Shift+e exec i3-msg exit

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 15 px or 15 ppt
        bindsym j resize grow height 15 px or 15 ppt
        bindsym k resize shrink height 15 px or 15 ppt
        bindsym l resize grow width 15 px or 15 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 15 px or 15 ppt
        bindsym Down resize grow height 15 px or 15 ppt
        bindsym Up resize shrink height 15 px or 15 ppt
        bindsym Right resize grow width 15 px or 15 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym q mode "default"
        bindsym x mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        position top
        status_command i3status --config ~/.config/i3/status
        font pango:Sans Bold 11
        colors {
            background #1c1f1f
            focused_workspace  #215d9c #215d9c #ffffff
            inactive_workspace #1c1f1f #1c1f1f #ffffff
            urgent_workspace   #dba5a5 #dba5a5 #1c1f1f
        }
}
